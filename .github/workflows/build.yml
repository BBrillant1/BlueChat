name: Build APK

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            build-essential git zip unzip openjdk-17-jdk \
            python3-pip python3-setuptools python3-wheel \
            libffi-dev libssl-dev libsqlite3-dev libjpeg-dev libpng-dev \
            libfreetype6-dev pkg-config zlib1g-dev libgl1-mesa-dev \
            libgles2-mesa-dev libx11-dev libxcursor-dev libxrandr-dev \
            libxinerama-dev libxi-dev libxxf86vm-dev

      - name: Install Buildozer
        run: |
          pip install --upgrade pip
          pip install buildozer cython

      - name: Install Android SDK
        run: |
          sudo apt-get update
          sudo apt-get install -y wget tar
          mkdir -p $HOME/android-sdk
          cd $HOME/android-sdk
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip commandlinetools-linux-9477386_latest.zip -d cmdline-tools
          yes | cmdline-tools/cmdline-tools/bin/sdkmanager --sdk_root=$HOME/android-sdk --licenses
          yes | cmdline-tools/cmdline-tools/bin/sdkmanager --sdk_root=$HOME/android-sdk \
            "platform-tools" "platforms;android-30" "build-tools;30.0.3" "ndk;21.4.7075529"

      - name: Initialize Buildozer
        run: |
          if [ ! -f buildozer.spec ]; then
            buildozer init
          fi

      - name: Build APK
        run: |
          buildozer android debug
